{"ast":null,"code":"// src/App.js\nimport React,{useEffect,useState}from\"react\";import{onAuthStateChanged}from\"firebase/auth\";import{auth}from\"./firebase\";import AppRoutes from\"./AppRoutes\";import Spinner from\"./Spinner\";// Using your Spinner component\nimport\"./index.css\";import{jsx as _jsx}from\"react/jsx-runtime\";function App(){const[currentUser,setCurrentUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{// onAuthStateChanged listener to update user state\nconst unsubscribe=onAuthStateChanged(auth,user=>{setCurrentUser(user);setLoading(false);});// Cleanup subscription on unmount\nreturn unsubscribe;},[]);// Show a spinner while checking authentication state\nif(loading){return/*#__PURE__*/_jsx(Spinner,{message:\"Authenticating...\"});}// FIXED: Pass props with the correct names `currentUser` and `setCurrentUser`\n// that AppRoutes.js is expecting.\nreturn/*#__PURE__*/_jsx(AppRoutes,{currentUser:currentUser,setCurrentUser:setCurrentUser});}export default App;","map":{"version":3,"names":["React","useEffect","useState","onAuthStateChanged","auth","AppRoutes","Spinner","jsx","_jsx","App","currentUser","setCurrentUser","loading","setLoading","unsubscribe","user","message"],"sources":["/Users/makelmackbee/dispcirclesapp/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useEffect, useState } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"./firebase\";\nimport AppRoutes from \"./AppRoutes\";\nimport Spinner from \"./Spinner\"; // Using your Spinner component\nimport \"./index.css\";\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // onAuthStateChanged listener to update user state\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    // Cleanup subscription on unmount\n    return unsubscribe;\n  }, []);\n\n  // Show a spinner while checking authentication state\n  if (loading) {\n    return <Spinner message=\"Authenticating...\" />;\n  }\n\n  // FIXED: Pass props with the correct names `currentUser` and `setCurrentUser`\n  // that AppRoutes.js is expecting.\n  return <AppRoutes currentUser={currentUser} setCurrentUser={setCurrentUser} />;\n}\n\nexport default App;\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,kBAAkB,KAAQ,eAAe,CAClD,OAASC,IAAI,KAAQ,YAAY,CACjC,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,OAAO,KAAM,WAAW,CAAE;AACjC,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAErB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAE5CD,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAa,WAAW,CAAGX,kBAAkB,CAACC,IAAI,CAAGW,IAAI,EAAK,CACrDJ,cAAc,CAACI,IAAI,CAAC,CACpBF,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CACF;AACA,MAAO,CAAAC,WAAW,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,GAAIF,OAAO,CAAE,CACX,mBAAOJ,IAAA,CAACF,OAAO,EAACU,OAAO,CAAC,mBAAmB,CAAE,CAAC,CAChD,CAEA;AACA;AACA,mBAAOR,IAAA,CAACH,SAAS,EAACK,WAAW,CAAEA,WAAY,CAACC,cAAc,CAAEA,cAAe,CAAE,CAAC,CAChF,CAEA,cAAe,CAAAF,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}