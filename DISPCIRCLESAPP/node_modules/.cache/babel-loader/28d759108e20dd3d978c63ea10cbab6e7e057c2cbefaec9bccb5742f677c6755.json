{"ast":null,"code":"import React,{useState}from\"react\";import Papa from\"papaparse\";import{useDropzone}from\"react-dropzone\";import{templates}from\"./csvTemplates\";import{db}from\"./firebase\";import{collection,addDoc}from\"firebase/firestore\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CSVUploader=_ref=>{let{user,elevation}=_ref;const[vendor,setVendor]=useState(\"\");const[notes,setNotes]=useState(\"\");const[mappedData,setMappedData]=useState([]);const[uploading,setUploading]=useState(false);const[error,setError]=useState(\"\");const onDrop=acceptedFiles=>{const file=acceptedFiles[0];if(!file||!vendor){alert(\"Please select a vendor and drop a CSV file.\");return;}Papa.parse(file,{header:true,skipEmptyLines:true,complete:async results=>{const rows=results.data;const headers=Object.keys(rows[0]);const template=templates[vendor];const templateKeys=Object.keys(template);// ✅ Validate header match\nconst matches=templateKeys.filter(key=>headers.includes(key));if(matches.length===0){setError(`❌ Your CSV doesn't match the expected format for \"${vendor}\". \nMake sure the file uses column headers like: ${templateKeys.join(\", \")}`);return;}setError(\"\");const batchId=`batch_${Date.now()}`;const uploadedAt=new Date();const standardized=rows.map(row=>{const mapped={};for(const[csvKey,stdKey]of Object.entries(template)){if(row[csvKey]!==undefined){mapped[stdKey]=row[csvKey];}}return{...mapped,uid:user.uid,batchId,uploadedAt,notes,elevation,club:row.club||row.Club||\"unknown\"};});setMappedData(standardized);setUploading(true);try{const userDataRef=collection(db,\"userData\");for(const row of standardized){await addDoc(userDataRef,row);}console.log(`✅ Uploaded ${standardized.length} rows for batch: ${batchId}`);alert(`Upload complete! ${standardized.length} rows saved.`);}catch(err){console.error(\"❌ Firestore write failed:\",err);alert(\"Upload failed. Check console.\");}finally{setUploading(false);}}});};const{getRootProps,getInputProps,isDragActive}=useDropzone({onDrop,accept:\".csv\"});return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-6 rounded-lg shadow-md text-white max-w-xl mx-auto space-y-4 mt-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold\",children:\"Upload Your CSV\"}),/*#__PURE__*/_jsxs(\"label\",{className:\"block mb-2\",children:[\"Select Launch Monitor:\",/*#__PURE__*/_jsxs(\"select\",{value:vendor,onChange:e=>setVendor(e.target.value),className:\"w-full mt-1 p-2 rounded text-black\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"-- Choose --\"}),/*#__PURE__*/_jsx(\"option\",{value:\"rapsodo\",children:\"Rapsodo\"}),/*#__PURE__*/_jsx(\"option\",{value:\"gspro\",children:\"GSPro\"}),/*#__PURE__*/_jsx(\"option\",{value:\"foresight\",children:\"Foresight\"}),/*#__PURE__*/_jsx(\"option\",{value:\"trackman\",children:\"Trackman\"})]})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"block\",children:[\"Session Notes:\",/*#__PURE__*/_jsx(\"textarea\",{value:notes,onChange:e=>setNotes(e.target.value),placeholder:\"e.g., Outdoor session, testing new driver shaft...\",className:\"w-full mt-1 p-2 rounded text-black\"})]}),/*#__PURE__*/_jsxs(\"div\",{...getRootProps(),className:\"border-dashed border-2 p-6 rounded text-center cursor-pointer bg-gray-700 hover:bg-gray-600 transition\",children:[/*#__PURE__*/_jsx(\"input\",{...getInputProps()}),isDragActive?\"Drop the file here...\":\"Drag and drop a .csv file here or click to select\"]}),uploading&&/*#__PURE__*/_jsx(\"p\",{className:\"text-yellow-400\",children:\"Uploading rows to Firestore...\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-500 p-3 mt-4 rounded text-white text-sm whitespace-pre-line\",children:error}),mappedData.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 text-sm\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Sample Output:\"}),/*#__PURE__*/_jsxs(\"pre\",{className:\"bg-gray-900 p-3 rounded text-green-300 overflow-x-auto\",children:[JSON.stringify(mappedData.slice(0,3),null,2),\"...\"]})]})]});};export default CSVUploader;","map":{"version":3,"names":["React","useState","Papa","useDropzone","templates","db","collection","addDoc","jsx","_jsx","jsxs","_jsxs","CSVUploader","_ref","user","elevation","vendor","setVendor","notes","setNotes","mappedData","setMappedData","uploading","setUploading","error","setError","onDrop","acceptedFiles","file","alert","parse","header","skipEmptyLines","complete","results","rows","data","headers","Object","keys","template","templateKeys","matches","filter","key","includes","length","join","batchId","Date","now","uploadedAt","standardized","map","row","mapped","csvKey","stdKey","entries","undefined","uid","club","Club","userDataRef","console","log","err","getRootProps","getInputProps","isDragActive","accept","className","children","value","onChange","e","target","placeholder","JSON","stringify","slice"],"sources":["/Users/makelmackbee/dispcirclesapp/src/CSVUploader.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport { useDropzone } from \"react-dropzone\";\nimport { templates } from \"./csvTemplates\";\nimport { db } from \"./firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\n\nconst CSVUploader = ({ user, elevation }) => {\n  const [vendor, setVendor] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const [mappedData, setMappedData] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const onDrop = (acceptedFiles) => {\n    const file = acceptedFiles[0];\n    if (!file || !vendor) {\n      alert(\"Please select a vendor and drop a CSV file.\");\n      return;\n    }\n\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: async (results) => {\n        const rows = results.data;\n        const headers = Object.keys(rows[0]);\n        const template = templates[vendor];\n        const templateKeys = Object.keys(template);\n\n        // ✅ Validate header match\n        const matches = templateKeys.filter(key => headers.includes(key));\n        if (matches.length === 0) {\n          setError(`❌ Your CSV doesn't match the expected format for \"${vendor}\". \nMake sure the file uses column headers like: ${templateKeys.join(\", \")}`);\n          return;\n        }\n\n        setError(\"\");\n        const batchId = `batch_${Date.now()}`;\n        const uploadedAt = new Date();\n\n        const standardized = rows.map((row) => {\n          const mapped = {};\n          for (const [csvKey, stdKey] of Object.entries(template)) {\n            if (row[csvKey] !== undefined) {\n              mapped[stdKey] = row[csvKey];\n            }\n          }\n\n          return {\n            ...mapped,\n            uid: user.uid,\n            batchId,\n            uploadedAt,\n            notes,\n            elevation,\n            club: row.club || row.Club || \"unknown\",\n          };\n        });\n\n        setMappedData(standardized);\n        setUploading(true);\n\n        try {\n          const userDataRef = collection(db, \"userData\");\n          for (const row of standardized) {\n            await addDoc(userDataRef, row);\n          }\n          console.log(`✅ Uploaded ${standardized.length} rows for batch: ${batchId}`);\n          alert(`Upload complete! ${standardized.length} rows saved.`);\n        } catch (err) {\n          console.error(\"❌ Firestore write failed:\", err);\n          alert(\"Upload failed. Check console.\");\n        } finally {\n          setUploading(false);\n        }\n      },\n    });\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: \".csv\",\n  });\n\n  return (\n    <div className=\"bg-gray-800 p-6 rounded-lg shadow-md text-white max-w-xl mx-auto space-y-4 mt-6\">\n      <h3 className=\"text-xl font-bold\">Upload Your CSV</h3>\n\n      <label className=\"block mb-2\">\n        Select Launch Monitor:\n        <select\n          value={vendor}\n          onChange={(e) => setVendor(e.target.value)}\n          className=\"w-full mt-1 p-2 rounded text-black\"\n        >\n          <option value=\"\">-- Choose --</option>\n          <option value=\"rapsodo\">Rapsodo</option>\n          <option value=\"gspro\">GSPro</option>\n          <option value=\"foresight\">Foresight</option>\n          <option value=\"trackman\">Trackman</option>\n        </select>\n      </label>\n\n      <label className=\"block\">\n        Session Notes:\n        <textarea\n          value={notes}\n          onChange={(e) => setNotes(e.target.value)}\n          placeholder=\"e.g., Outdoor session, testing new driver shaft...\"\n          className=\"w-full mt-1 p-2 rounded text-black\"\n        />\n      </label>\n\n      <div\n        {...getRootProps()}\n        className=\"border-dashed border-2 p-6 rounded text-center cursor-pointer bg-gray-700 hover:bg-gray-600 transition\"\n      >\n        <input {...getInputProps()} />\n        {isDragActive\n          ? \"Drop the file here...\"\n          : \"Drag and drop a .csv file here or click to select\"}\n      </div>\n\n      {uploading && <p className=\"text-yellow-400\">Uploading rows to Firestore...</p>}\n\n      {error && (\n        <div className=\"bg-red-500 p-3 mt-4 rounded text-white text-sm whitespace-pre-line\">\n          {error}\n        </div>\n      )}\n\n      {mappedData.length > 0 && (\n        <div className=\"mt-4 text-sm\">\n          <strong>Sample Output:</strong>\n          <pre className=\"bg-gray-900 p-3 rounded text-green-300 overflow-x-auto\">\n            {JSON.stringify(mappedData.slice(0, 3), null, 2)}...\n          </pre>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CSVUploader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}